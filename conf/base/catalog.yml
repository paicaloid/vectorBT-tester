# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html

RAW_GOOG_ADX:
  type: pandas.CSVDataSet
  filepath: data/01_raw/GOOG_1D_ADX.csv
  load_args:
    sep: ','
  save_args:
    date_format: '%Y-%m-%d'
  layer: raw

RAW_GOOG_BB:
  type: pandas.CSVDataSet
  filepath: data/01_raw/GOOG_1D_BB_20_STD_2.csv
  load_args:
    sep: ','
  save_args:
    date_format: '%Y-%m-%d'
  layer: raw

RAW_GOOG_EMA_5:
  type: pandas.CSVDataSet
  filepath: data/01_raw/GOOG_1D_EMA_5.csv
  load_args:
    sep: ','
  save_args:
    date_format: '%Y-%m-%d'
  layer: raw

RAW_GOOG_EMA_35:
  type: pandas.CSVDataSet
  filepath: data/01_raw/GOOG_1D_EMA_35.csv
  load_args:
    sep: ','
  save_args:
    date_format: '%Y-%m-%d'
  layer: raw

RAW_GOOG_MACD:
  type: pandas.CSVDataSet
  filepath: data/01_raw/GOOG_1D_MACD.csv
  load_args:
    sep: ','
  save_args:
    date_format: '%Y-%m-%d'
  layer: raw

RAW_GOOG_OBV:
  type: pandas.CSVDataSet
  filepath: data/01_raw/GOOG_1D_OBV_VOLUME.csv
  load_args:
    sep: ','
  save_args:
    date_format: '%Y-%m-%d'
  layer: raw

RAW_GOOG_RSI:
  type: pandas.CSVDataSet
  filepath: data/01_raw/GOOG_1D_RSI_14_SMA.csv
  load_args:
    sep: ','
  save_args:
    date_format: '%Y-%m-%d'
  layer: raw

RAW_GOOG_SAR:
  type: pandas.CSVDataSet
  filepath: data/01_raw/GOOG_1D_SAR.csv
  load_args:
    sep: ','
  save_args:
    date_format: '%Y-%m-%d'
  layer: raw

RAW_GOOG_STOCH:
  type: pandas.CSVDataSet
  filepath: data/01_raw/GOOG_1D_STOCH_RSI.csv
  load_args:
    sep: ','
  save_args:
    date_format: '%Y-%m-%d'
  layer: raw

RAW_GOOG_WR:
  type: pandas.CSVDataSet
  filepath: data/01_raw/GOOG_1D_WR.csv
  load_args:
    sep: ','
  save_args:
    date_format: '%Y-%m-%d'
  layer: raw

GOOG_ADX:
  type: pandas.ParquetDataSet
  filepath: data/02_intermediate/GOOG_1D_ADX.pq
  layer: intermediate

GOOG_BB:
  type: pandas.ParquetDataSet
  filepath: data/02_intermediate/GOOG_1D_BB_20_STD_2.pq
  layer: intermediate

GOOG_EMA_5:
  type: pandas.ParquetDataSet
  filepath: data/02_intermediate/GOOG_1D_EMA_5.pq
  layer: intermediate

GOOG_EMA_35:
  type: pandas.ParquetDataSet
  filepath: data/02_intermediate/GOOG_1D_EMA_35.pq
  layer: intermediate

GOOG_MACD:
  type: pandas.ParquetDataSet
  filepath: data/02_intermediate/GOOG_1D_MACD.pq
  layer: intermediate

GOOG_OBV:
  type: pandas.ParquetDataSet
  filepath: data/02_intermediate/GOOG_1D_OBV_VOLUME.pq
  layer: intermediate

GOOG_RSI:
  type: pandas.ParquetDataSet
  filepath: data/02_intermediate/GOOG_1D_RSI_14_SMA.pq
  layer: intermediate

GOOG_SAR:
  type: pandas.ParquetDataSet
  filepath: data/02_intermediate/GOOG_1D_SAR.pq
  layer: intermediate

GOOG_STOCH:
  type: pandas.ParquetDataSet
  filepath: data/02_intermediate/GOOG_1D_STOCH_RSI.pq
  layer: intermediate

GOOG_WR:
  type: pandas.ParquetDataSet
  filepath: data/02_intermediate/GOOG_1D_WR.pq
  layer: intermediate

RAW_GOOG_DATASET:
  type: PartitionedDataSet
  path: data/01_raw
  dataset: 
    type: pandas.CSVDataSet
  filename_suffix: '.csv'
  layer: raw

GOOG_MERGE_DATA:
  type: pandas.ParquetDataSet
  filepath: data/03_primary/ASSET_MERGE_DATA.pq
  layer: primary

# Plot on kedro viz
GOOG_PLOT:
  type: plotly.PlotlyDataSet
  filepath: data/03_primary/ASSET_MERGE_DATA.json
  plotly_args:
    type: line
    fig:
      x: time
      y: close_GOOG_1D_ADX
      orientation: h
    layout:
      xaxis_title: datetime
      yaxis_title: close GOOG_1D_ADX
      title: Close Price 
  layer: visualize

# Plot on kedro viz
RSI_PLOT:
  type: plotly.JSONDataSet
  filepath: data/04_feature/RSI_PLOT.json
  layer: visualize

PORTFOLIO_RSI_PLOT:
  type: plotly.JSONDataSet
  filepath: data/07_model_output/PORTFOLIO_RSI_PLOT.json
  layer: visualize
